// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.PortfolioSlider = (function() {
    function PortfolioSlider(config) {
      var thumbImages, thumbnails, wrapper;
      this.config = config != null ? config : {};
      this.hideLoader = bind(this.hideLoader, this);
      this.getLoader = bind(this.getLoader, this);
      this.clickThumbnail = bind(this.clickThumbnail, this);
      this.config.thumbnailsId = this.config.thumbnailsId || "thumbnails";
      this.config.displayContainer = this.config.displayContainer || "displayContainer";
      this.config.loaderUrl = this.config.loaderId || 'assets/images/spin.gif';
      this.config.id = this.config.id || 'portfolio-slider';
      this.config.loaderClass = this.config.loaderClass || 'image-loader';
      wrapper = document.getElementById(this.config.id);
      if (wrapper) {
        wrapper.style.position = 'relative';
        wrapper.style.overflow = 'hidden';
      }
      thumbnails = document.getElementById(this.config.thumbnailId);
      if (!thumbnails) {
        throw "Could not Find Thumbnails";
      }
      thumbnails.addEventListener("click", this.clickThumbnail);
      thumbImages = thumbnails.getElementsByTagName('img');
      if (!thumbImages) {
        throw "No Images found in thumbnail wrapper";
      }
      this.clickThumbnail({
        target: thumbImages[0]
      });
      $(window).resize((function(_this) {
        return function() {
          return _this.updateImages($('.image-primary'), $('.image-secondary'), null, $('.image-outgoing'), true);
        };
      })(this));
    }

    PortfolioSlider.prototype.clickThumbnail = function(event) {
      var display, img, loader, thumb, url;
      thumb = event.target;
      url = thumb.dataset.original || thumb.src;
      if (url) {
        if ($('.image-primary').length > 0 && $('.image-primary')[0].src === url) {
          return;
        }
        loader = this.getLoader();
        img = document.createElement('img');
        img.src = url;
        $(thumb).addClass('viewed');
        display = document.getElementById(this.config.displayContainer);
        display.appendChild(img);
        return img.onload = (function(_this) {
          return function() {
            return _this.activateImage(img);
          };
        })(this);
      }
    };

    PortfolioSlider.prototype.activateImage = function(img) {
      var imageIncoming, imageOutgoing, imagePrimary, imageSecondary;
      imageIncoming = $(img);
      imagePrimary = $('.image-primary');
      imageSecondary = $('.image-secondary');
      imageOutgoing = $('.image-outgoing');
      imageIncoming.addClass('feature-image image-primary');
      imagePrimary.addClass('image-secondary').removeClass('image-primary');
      imageSecondary.removeClass('image-secondary').addClass('image-outgoing');
      this.hideLoader();
      return this.updateImages(imageIncoming, imagePrimary, imageSecondary, imageOutgoing, true);
    };

    PortfolioSlider.prototype.updateImages = function(incoming, primary, secondary, outgoing, animate) {
      var leftSpace, leftSpaceIncoming, leftSpacePrimary, leftSpaceSecondary, totalWidth;
      totalWidth = incoming.width() + primary.width();
      leftSpacePrimary;
      leftSpaceIncoming;
      if (totalWidth < window.innerWidth) {
        leftSpace = (window.innerWidth - totalWidth) / 2;
        leftSpacePrimary = leftSpace;
        leftSpaceIncoming = leftSpace + primary.width();
        if (secondary) {
          leftSpaceSecondary = -(secondary.width());
        }
      } else {
        leftSpace = (window.innerWidth - incoming.width()) / 2;
        leftSpacePrimary = -(primary.width());
        leftSpaceIncoming = leftSpace;
        if (secondary) {
          leftSpaceSecondary = -(secondary.width()) - primary.width();
        }
      }
      if (animate) {
        incoming.stop().animate({
          'left': leftSpaceIncoming + 'px'
        }, 300);
        primary.stop().animate({
          'left': leftSpacePrimary + 'px'
        }, 300);
        if (secondary) {
          secondary.stop().animate({
            'left': leftSpaceSecondary + 'px'
          }, 300);
        }
      } else {
        incoming.css({
          'left': leftSpaceIncoming + 'px'
        });
        primary.css({
          'left': leftSpacePrimary + 'px'
        });
        if (secondary) {
          secondary.css({
            'left': leftSpaceSecondary + 'px'
          });
        }
      }
      return outgoing.css({
        'left': '100%'
      });
    };

    PortfolioSlider.prototype.getLoader = function() {
      var loader, object;
      loader = document.getElementById('js-loader');
      if (!loader) {
        loader = document.createElement('img');
        loader.src = this.config.loaderUrl;
        loader.id = 'js-loader';
        loader.className = this.config.loaderClass;
        object = document.getElementById(this.config.displayContainer);
        object.appendChild(loader);
      }
      loader = $(loader);
      loader.addClass('active');
      return loader;
    };

    PortfolioSlider.prototype.hideLoader = function() {
      return $('#js-loader').removeClass('active');
    };

    return PortfolioSlider;

  })();

}).call(this);
